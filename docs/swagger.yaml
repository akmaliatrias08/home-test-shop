basePath: /
definitions:
  health.HealthSuccess:
    properties:
      message:
        example: success
        type: string
    type: object
  models.Role:
    properties:
      created_at:
        example: "2024-07-16T23:13:03.115483+07:00"
        type: string
      deleted_at:
        example: "null"
        type: string
      id:
        example: ab7ac1cb-17c6-4e9a-8cd8-d51d8988c5ec
        type: string
      name:
        example: Admin
        type: string
      updated_at:
        example: "2024-07-16T23:13:03.115483+07:00"
        type: string
    type: object
  role.CreateRoleDTO:
    properties:
      name:
        example: Admin
        type: string
    required:
    - name
    type: object
  role.UpdateRoleDTO:
    properties:
      name:
        example: Shop
        type: string
    required:
    - name
    type: object
host: localhost:5000
info:
  contact: {}
  description: A Online Shop Backend Service
  title: Online Shop
  version: "1.0"
paths:
  /health:
    get:
      description: Responds if the APIs success.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/health.HealthSuccess'
      summary: Check health APIs
      tags:
      - health
  /role:
    get:
      description: Get all role that exist
      parameters:
      - description: Page to load
        in: query
        name: page
        type: string
      - description: Page size or limit list data
        in: query
        name: pageSize
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Role'
            type: array
      summary: Get all role
      tags:
      - role
    post:
      description: Create new role
      parameters:
      - description: Create role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/role.CreateRoleDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Role'
      summary: Create role
      tags:
      - role
  /role/{id}:
    delete:
      description: Delete role by ID
      parameters:
      - description: Role id to delete
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Role'
      summary: Delete role by ID
      tags:
      - role
    put:
      description: Update role by ID
      parameters:
      - description: Role id to update
        in: path
        name: id
        required: true
        type: string
      - description: Update role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/role.UpdateRoleDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Role'
      summary: Update role by ID
      tags:
      - role
swagger: "2.0"
